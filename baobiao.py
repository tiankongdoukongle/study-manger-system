# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'baobiao.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import pymysql
import pandas as pd
from sqlalchemy import create_engine
import os
paths=[]
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(850, 700)
        MainWindow.setMinimumSize(QtCore.QSize(850, 700))
        MainWindow.setMaximumSize(QtCore.QSize(850, 700))
        MainWindow.setStyleSheet("background-image: url(微信图片_20220430232135.png);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        # 设置打开文件按钮
        self.file = QtWidgets.QPushButton(self.centralwidget)
        self.file.setGeometry(QtCore.QRect(57, 560, 175, 28))
        self.file.setObjectName("file")
        self.file.setStyleSheet("background-color:rgb(111,180,219)")
        self.file.setStyleSheet(
            "QPushButton{background-color:rgb(111,180,219)}"  # 按键背景色
            "QPushButton:hover{color:green}"  # 光标移动到上面后的前景色
            "QPushButton{border-radius:6px}"  # 圆角半径
            "QPushButton:pressed{background-color:rgb(180,180,180);border: None;}"  # 按下时的样式
        )
        # 显示文件窗口
        self.fileT = QtWidgets.QPushButton(self.centralwidget)
        self.fileT.setGeometry(QtCore.QRect(300, 560, 480, 28))
        self.fileT.setObjectName("file")
        self.fileT.setStyleSheet("background-color:rgb(111,180,219)")
        self.fileT.setStyleSheet(
            "QPushButton{background-color:rgb(111,180,219)}"  # 按键背景色
            "QPushButton:hover{color:green}"  # 光标移动到上面后的前景色
            "QPushButton{border-radius:6px}"  # 圆角半径
            "QPushButton:pressed{background-color:rgb(180,180,180);border: None;}"  # 按下时的样式
        )


        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(150, 250, 151, 81))
        self.pushButton.setStyleSheet("border-radius: 10px;  border: 2px groove gray;\n"
"border-style: outset;\n"
"border-top:0px solid #e8f3f9;background:  transparent; ")
        self.pushButton.setObjectName("pushButton")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(50, 120, 171, 61))
        self.comboBox.setStyleSheet("border-radius: 10px;  border: 2px groove gray;\n"
"border-style: outset;\n"
"")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(50, 40, 251, 31))
        self.label.setObjectName("label")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(150, 380, 151, 81))
        self.pushButton_4.setStyleSheet("border-radius: 10px;  border: 2px groove gray;\n"
"border-style: outset;\n"
"border-top:0px solid #e8f3f9;background:  transparent; ")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(280, 120, 101, 61))
        self.pushButton_5.setStyleSheet("border-radius: 10px;  border: 2px groove gray;\n"
"border-style: outset;\n"
"border-top:0px solid #e8f3f9;background:  transparent; ")
        self.pushButton_5.setObjectName("pushButton_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.comboBox.setStyleSheet("border-radius: 13px;  border: 2px groove gray;\n"
                                    "border-style: outset;\n"
                                    )
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        self.pushButton_5.clicked.connect(self.daochu1)
        self.pushButton.clicked.connect(self.beifen)
        self.pushButton_4.clicked.connect(self.huifu)
        self.file.clicked.connect(self.msg)

    def msg(self, Filepath):
        fileName,fileType = QtWidgets.QFileDialog.getOpenFileName(None, "选取文件","./", "All Files (*);;Text Files(*.txt)")
        self.fileT.setText(fileName)

    def daochu1(self):
        file = self.fileT.text()
        text=self.comboBox.currentText()
        try:
            if(text == '学生成绩汇总报表'):
                engine = create_engine('mysql+pymysql://root:987433@localhost:3306/keshe01', encoding='utf-8')
                sql = ("select student.sno,student.sname,course.cname,choose"
                   ".score from student,course,choose where student.sno= choose.sno and choose.cno=course.cno")
                df = pd.read_sql_query(sql, con=engine)
                df.to_excel(file)
                QtWidgets.QMessageBox.information(self, '成功', '数据导出', QtWidgets.QMessageBox.Yes |
                                                  QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.Yes)
            elif(text=='重修学生统计报表'):
                engine = create_engine('mysql+pymysql://root:987433@localhost:3306/keshe01', encoding='utf-8')
                sql = ("select student.sno,student.sname,course.cname,choose.score from student,course,"
                       "choose where student.sno= choose.sno and choose.cno=course.cno and choose.score<'60'")
                df = pd.read_sql_query(sql, con=engine)
                df.to_excel(file)
                QtWidgets.QMessageBox.information(self, '成功', '数据导出成功', QtWidgets.QMessageBox.Yes |
                                                  QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.Yes)
        except:
            QtWidgets.QMessageBox.information(self, '失败', '导出失败', QtWidgets.QMessageBox.Yes |
                                              QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.Yes)
    def beifen(self):
        file = self.fileT.text()
        try:
            os.system("mysqldump -uroot -p987433 keshe01 > %s"% (file) )
            QtWidgets.QMessageBox.information(self, '成功', '数据备份成功', QtWidgets.QMessageBox.Yes |
                                              QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.Yes)
        except:
            QtWidgets.QMessageBox.information(self, '失败', '数据备份失败', QtWidgets.QMessageBox.Yes |
                                              QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.Yes)
    def huifu(self):
        file = self.fileT.text()
        try:
            os.system("mysql -uroot -p987433 keshe01 < %s" % (file))
            QtWidgets.QMessageBox.information(self, '成功', '数据恢复成功', QtWidgets.QMessageBox.Yes |
                                              QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.Yes)
        except:
            QtWidgets.QMessageBox.information(self, '失败', '数据恢复失败', QtWidgets.QMessageBox.Yes |
                                              QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.Yes)



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.file.setText(_translate("MainWindow", "选择文件"))
        self.fileT.setText(_translate("MainWindow", ""))
        self.pushButton.setText(_translate("MainWindow", "数据备份"))
        self.comboBox.setItemText(0, _translate("MainWindow", "学生成绩汇总报表"))
        self.comboBox.setItemText(1, _translate("MainWindow", "重修学生统计报表"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">报表输出与数据维护</span></p></body></html>"))
        self.pushButton_4.setText(_translate("MainWindow", "数据恢复"))
        self.pushButton_5.setText(_translate("MainWindow", "导出"))
